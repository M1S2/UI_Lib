/*! @page page_4_availablecomponents 4 - Available Components

This section lists all available UI elements (containers, controls, indicators). Base classes are not listed here.

@section containers_sec Containers
- ContainerList: This container can be used to show one children at a time. The user can scroll though all items one by one. A scroll bar is indicating the position of the currently shown item in the list of items.  
	- Supports children: Yes (adding with `ContainerList::AddItem` function)
	- Supported key inputs: 
		- ::KEYUP and ::KEYDOWN to scroll through the items.
	- Supported touch inputs:
		- ::TOUCH_NORMAL or ::TOUCH_LONG in upper half of scroll bar: Scroll up one element in the list (like ::KEYUP)
		- ::TOUCH_NORMAL or ::TOUCH_LONG in lower half of scroll bar: Scroll down one element in the list (like ::KEYDOWN)
		- ::TOUCH_NORMAL or ::TOUCH_LONG outside scroll bar: Tunnel touch to currently displayed UI_Element
- ContainerPage: This container can be used to show all children at the same time. This can be used to draw e.g. multiple controls and indicators on the same page.
	- Supports children: Yes (adding with `ContainerPage::AddItem` function)
	- Supported key inputs: 
		- ::KEYUP and ::KEYDOWN to select the next/previous control in the list of items. Indicators are ignored (not selected).
	- Supported touch inputs:
		- ::TOUCH_NORMAL or ::TOUCH_LONG: Tunnel touch to all child elements one after another. Break if one child element has handled the touch.
- ContainerGrid: This container can be used to show all children at the same time in a grid layout.
	- Supports children: Yes (adding with `ContainerGrid::AddItem` function)
	- Supported key inputs: 
		- ::KEYUP and ::KEYDOWN to select the next/previous control in the list of items. Indicators are ignored (not selected).
	- Supported touch inputs:
		- ::TOUCH_NORMAL or ::TOUCH_LONG: Tunnel touch to all child elements one after another. Break if one child element has handled the touch.
- ContainerStack: This container can be used to show all children at the same time stacked horizontal or vertical.
	- Supports children: Yes (adding with `ContainerStack::AddItem` function)
	- Supported key inputs: 
		- ::KEYUP and ::KEYDOWN to select the next/previous control in the list of items. Indicators are ignored (not selected).
	- Supported touch inputs:
		- ::TOUCH_NORMAL or ::TOUCH_LONG: Tunnel touch to all child elements one after another. Break if one child element has handled the touch.
- TabControl: This control can be used to show a tab control with each tab page holding one UI element. Each tab header is also holding one UI element.
	- Supports children: Yes (adding with `TabControl::AddItem` function)
	- Supported key inputs:
		- ::KEYLEFT and ::KEYRIGHT to go to the previous/next tab page.
	- Supported touch inputs:
		- ::TOUCH_NORMAL or ::TOUCH_LONG inside header region: Select the tab based on the touched header
		- ::TOUCH_NORMAL or ::TOUCH_LONG outside header region: Tunnel touch to currently displayed UI_Element

@section controls_sec Controls
- BoolControl: This control can be used to toggle the value of an boolean variable. 
	- Supports children: No
	- Supported key inputs: 
		- ::KEYOK to toggle the boolean value.
	- Supported touch inputs:
		- ::TOUCH_NORMAL: Toggle the boolean value (like ::KEYOK)
- ButtonControl: This control can be used to display a button that the user can press. When pressed, a callback function is executed.
	- Supports children: No
	- Supported key inputs: 
		- ::KEYOK to press the button and execute the callback function.
	- Supported touch inputs:
		- ::TOUCH_NORMAL: Press the button and execute the callback function (like ::KEYOK)
- EnumControl: This control can be used to choose a value from an enumeration.
	- Supports children: No
	- Supported key inputs: 
		- ::KEYOK to toggle between edit and display mode. 
		- ::KEYUP and ::KEYDOWN to change to the next/previous enumeration value (only supported in edit mode).
	- Supported touch inputs:
		- ::TOUCH_NORMAL in left half of control while in edit mode: Change to previous enumeration value (like ::KEYDOWN)
		- ::TOUCH_NORMAL in right half of control while in edit mode: Change to next enumeration value (like ::KEYUP)
		- ::TOUCH_LONG: Toggle between edit and display mode (like ::KEYOK)
- MessageDialog: This control can be used to show a message dialog including a severity icon (info, warning, error), a message text and 0, 1 or 2 buttons (OK, Cancel).
	- Supports children: No
	- Supported key inputs: The user inputs are internally redirected to the ContainerPage that is managing the buttons.
	- Supported touch inputs: The touch inputs are internally redirected to the ContainerPage that is managing the buttons.
- NumericControl: This control can be used to change the value of a numeric variable.
	- Supports children: No
	- Supported key inputs: 
		- ::KEYOK to toggle between edit and display mode. 
		- ::KEYLEFT and ::KEYRIGHT to move the cursor left/right (only supported in edit mode).
		- ::KEYUP and ::KEYDOWN to increase/decrease the digit at the cursor position (only supported in edit mode).
		- ::KEYKILO, ::KEYMILLI to change to kilo (*1000) or milli (/1000) of the current value (only supported in edit mode).
		- ::KEYX1 change to the base unit, *1 (only supported in edit mode).
		- ::KEYMINUS to toggle from positive to negative value (only supported in edit mode).
		- ::KEY0 to ::KEY9 to change the value of the digit at the cursor position to the corresponding value (only supported in edit mode).
	- Supported touch inputs:
		- ::TOUCH_NORMAL on left half of control (edit icon) while in edit mode: Open a virtual keypad to edit the control value like with key inputs
		- ::TOUCH_LONG: Toggle between edit and display mode (like ::KEYOK)
- VirtualKeys: This control can be used to emulate key presses via touch inputs. It displays one UI_Element that receives all emulated key presses and a matrix with many BoolControl elements to input key presses.
	- Supports children: No
	- Supported key inputs: The user inputs are internally redirected to the ContainerGrid that is managing the buttons.
	- Supported touch inputs: The touch inputs are internally redirected to the ContainerGrid that is managing the buttons.

@section indicators_sec Indicators
- BoolIndicator: This indicator can be used to display the value of an boolean variable ("ON" or "OFF"). 
	- Supports children: No
	- Supported key inputs: None
	- Supported touch inputs: None
- EnumIndicator: This indicator can be used to display the value from an enumeration variable.
	- Supports children: No
	- Supported key inputs: None
	- Supported touch inputs: None
- Icon: This indicator can be used to show an icon on the user interface. The icons must be in the .xbm format and located in the program memory (using the PROGMEM attribute).
	- Supports children: No
	- Supported key inputs: None
	- Supported touch inputs: None
- Label: This indicator can be used to show a string on the user interface. The Label supports multiline strings (containing line breaks) and different fonts.
	- Supports children: No
	- Supported key inputs: None
	- Supported touch inputs: None
- NumericIndicator: This indicator can be used to display the value of a numeric variable. The value is displayed in prefixed format is possible (e.g. 1000 is displayed as 1k)
	- Supports children: No
	- Supported key inputs: None
	- Supported touch inputs: None
- ProgressBar: This indicator can be used to display a progress bar. It supports different fill modes (origin left, origin right, origin zero) and ticks.
	- Supports children: No
	- Supported key inputs: None
	- Supported touch inputs: None

 */